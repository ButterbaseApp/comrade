name: CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/**/*.cr'
      - 'spec/**/*.cr'
      - 'shard.yml'
      - '.github/workflows/ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/**/*.cr'
      - 'spec/**/*.cr'
      - 'shard.yml'
      - '.github/workflows/ci.yml'

jobs:
  test:
    name: Test Crystal ${{ matrix.crystal }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        crystal: [1.17.1, 1.18.0, latest]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Crystal
      uses: crystal-lang/install-crystal@v1
      with:
        crystal: ${{ matrix.crystal }}
        
    - name: Cache shards
      uses: actions/cache@v4
      with:
        path: lib
        key: ${{ runner.os }}-crystal-${{ matrix.crystal }}-${{ hashFiles('shard.yml') }}
        restore-keys: |
          ${{ runner.os }}-crystal-${{ matrix.crystal }}-
          ${{ runner.os }}-crystal-
          
    - name: Install dependencies
      run: shards install
      
    - name: Build library
      run: crystal build src/comrade.cr --no-codegen
      
    - name: Run tests
      run: crystal spec
      
    - name: Check formatting
      run: crystal tool format --check
      
    - name: Run Ameba linter
      run: ./bin/ameba

  
  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Crystal
      uses: crystal-lang/install-crystal@v1
      with:
        crystal: latest
        
    - name: Install dependencies
      run: shards install
      
    - name: Build with release optimization
      run: crystal build src/comrade.cr --release --no-debug
      
    - name: Test library compilation
      run: |
        # Create a simple test app to ensure library compiles correctly
        cat > test_app.cr << 'EOF'
        require "./src/comrade"
        
        # Basic smoke test
        puts "Comrade library loaded successfully"
        
        # Test manager initialization
        manager = Comrade::Manager.instance
        puts "Manager instance created: #{manager.class}"
        EOF
        
        crystal run test_app.cr